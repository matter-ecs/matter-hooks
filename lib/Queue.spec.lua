local Queue = require(script.Parent.Queue)

return function()
	describe("new", function()
		it("should create a new Queue", function()
			expect(Queue.new()).to.be.ok()
		end)
	end)

	describe("shift", function()
		local queue

		beforeEach(function()
			queue = Queue.new()
		end)

		it("should return nil when empty", function()
			expect(queue:shift()).to.equal(nil)
		end)

		it("should return a single element", function()
			queue:push(1)
			expect(queue:shift()).to.equal(1)
		end)

		it("return nil after emptying a single item", function()
			queue:push(1)
			queue:shift()
			expect(queue:shift()).to.equal(nil)
		end)

		it("should return multiple elements in order", function()
			queue:push(1)
			queue:push(2)
			queue:push(3)
			queue:push(4)
			queue:push(5)
			expect(queue:shift()).to.equal(1)
			expect(queue:shift()).to.equal(2)
			expect(queue:shift()).to.equal(3)
			expect(queue:shift()).to.equal(4)
			expect(queue:shift()).to.equal(5)
		end)

		it("should return nil after emptying multiple elements", function()
			queue:push(1)
			queue:push(2)
			queue:push(3)
			queue:push(4)
			queue:push(5)
			queue:shift()
			queue:shift()
			queue:shift()
			queue:shift()
			queue:shift()
			expect(queue:shift()).to.equal(nil)
		end)
	end)
end
